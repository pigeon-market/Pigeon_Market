/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-08-14 02:11:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import myPage.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/myPage/updateMyInfo.jsp", Long.valueOf(1565745672000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("myPage.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
 

	Member m = (Member)session.getAttribute("loginUser");

	String userId = m.getUserId();
	String userPwd = m.getUserPwd();
	String userName = m.getUserName();
	String email = m.getEmail();
	String phone = m.getPhone();
	String address = m.getAddress();
	
	String emailCheck = "off";
	String phoneCheck = "off";


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write(" <style>\r\n");
      out.write("        #background {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 1200px;\r\n");
      out.write("            background: linear-gradient(rgb(129, 200, 177), rgb(255, 236, 189));\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .outline {\r\n");
      out.write("            background: rgba(40, 51, 102, 0.363);\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            left: 30%;\r\n");
      out.write("            top: 10%;\r\n");
      out.write("            padding-bottom: 1%;\r\n");
      out.write("            box-shadow: -3px -3px 5px 3px rgba(129, 200, 177), 3px 0px 5px 3px rgba(129, 200, 177), 0px 3px 5px 3px rgba(255, 236, 189);\r\n");
      out.write("            width:35%;\r\n");
      out.write("        \r\n");
      out.write("        }\r\n");
      out.write("        .outline h1{\r\n");
      out.write("            text-align:center;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        table {\r\n");
      out.write("            margin-left: 5%;\r\n");
      out.write("            border-spacing: 2em 2em;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .table1 {\r\n");
      out.write("            margin-left: 50%;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .enter {\r\n");
      out.write("            background-color: transparent;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            border: none;\r\n");
      out.write("            z-index: 2;\r\n");
      out.write("            border-bottom: 2px solid rgba(98, 32, 124, 0.527);\r\n");
      out.write("            width: 250px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .subtable {\r\n");
      out.write("            width: auto;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        input::-webkit-input-placeholder {\r\n");
      out.write("            color: rgba(34, 34, 34, 0.534);\r\n");
      out.write("            font-weight: bolder;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btns {\r\n");
      out.write("            padding-left: 20%;\r\n");
      out.write("            padding-top: 5%;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btns input {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            font-family: Arial;\r\n");
      out.write("            background: transparent;\r\n");
      out.write("            text-indent: 0px;\r\n");
      out.write("            line-height: 0.5em;\r\n");
      out.write("            border-radius: 71px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 1.5em;\r\n");
      out.write("            color: #0d636e;\r\n");
      out.write("            width: 176px;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            padding: 8px;\r\n");
      out.write("            border-width: 2px;\r\n");
      out.write("            margin-right: 10%;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"background\">\r\n");
      out.write("\t\t<div class=\"outline\">\r\n");
      out.write("\t\t\t<h1>회원관리 수정</h1>\r\n");
      out.write("\t\t\t<form action=\"");
      out.print( request.getContextPath() );
      out.write("/updateMember.me\" method=\"post\" onsubmit=\"return updateMember();\">\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"joinId\">아이디</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" maxlength=\"15\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"영문, 숫자 최대 15글자\" id=\"joinId\" class=\"enter\" readonly></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"password\">비밀번호</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"password\" maxlength=\"15\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"영문, 숫자, 특수문자포함 최대 15글자\" id=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"enter\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"joinId\">비밀번호 확인</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"password\" maxlength=\"15\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"영문, 숫자 최대 15글자\" id=\"password2\" class=\"enter\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"subtable\"><label>비밀번호 확인</label></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"joinId\">이름</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" maxlength=\"5\" id=\"joinId\" class=\"enter\" readonly>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"joinId\">생년월일</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" maxlength=\"6\" id=\"joinId\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"숫자만 6자리\" class=\"enter\" readonly>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"joinId\">이메일</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"email\" maxlength=\"50\" placeholder=\"@포함\" id=\"joinId\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"enter\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"emailPass\"><label id=\"emailPass\">이메일확인</label></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"joinId\">전화번호</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"tel\" maxlength=\"13\" placeholder=\"-없이\" id=\"joinId\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"enter\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"emailPass\"><label id=\"emailPass\">본인인증</label></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"><label for=\"joinId\">주소</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" maxlength=\"15\" placeholder=\"이 부분은 찾아야함\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"joinId\" class=\"enter\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"table1\"></td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"table2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" maxlength=\"15\" placeholder=\"이 부분은 찾아야함\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"joinId\" class=\"enter\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"btns\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"회원가입\" > \r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"취소하기\" onclick=\"goMyPage();\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction goMyPage() {\r\n");
      out.write("\t\t\tlocation.href = \"");
      out.print( request.getContextPath() );
      out.write("/myMainPage.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction updateMember() {\r\n");
      out.write("\t\t\tif($(\"#password\").val().trim.length() == 0) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("\t\t\t\t$(#password).focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#password2\").val().trim.length() == 0 ) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("\t\t\t\t$(#password2).focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(!(emailCheck.equals(\"on\"))) {\r\n");
      out.write("\t\t\t\talert(\"이메일 인증을 해주세요.\")\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(!(phoneCheck.equals(\"on\"))) {\r\n");
      out.write("\t\t\t\talert(\"휴대폰 인증을 해주세요\")\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction emailCheck() {\r\n");
      out.write("\t\t\t// 이메일 체크하는 기능 구현\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction phoneCheck() {\r\n");
      out.write("\t\t\t// 핸드폰 변경체크하는 기능 구현\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
