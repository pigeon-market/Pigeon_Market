-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- Member Table Create SQL
CREATE TABLE Member
(
    user_id       VARCHAR2(20)    NOT NULL, 
    user_pwd      VARCHAR2(45)    NOT NULL, 
    user_name     VARCHAR2(30)    NOT NULL, 
    birth_date    VARCHAR2(20)    NOT NULL, 
    gender        VARCHAR2(1)     NOT NULL, 
    email         VARCHAR2(45)    NOT NULL, 
    phone         VARCHAR2(20)    NOT NULL, 
    address       VARCHAR2(50)    NOT NULL, 
    join_date     DATE            DEFAULT SYSDATE NOT NULL, 
    Withdrawal    VARCHAR2(1)     DEFAULT 'N' NOT NULL, 
    black_code    VARCHAR2(1)     DEFAULT 'N' NOT NULL, 
    CONSTRAINT MEMBER_PK PRIMARY KEY (user_id)
)
/

COMMENT ON TABLE Member IS '회원가입'
/

COMMENT ON COLUMN Member.user_id IS '아이디'
/

COMMENT ON COLUMN Member.user_pwd IS '비밀번호'
/

COMMENT ON COLUMN Member.user_name IS '이름'
/

COMMENT ON COLUMN Member.birth_date IS '생년월일'
/

COMMENT ON COLUMN Member.gender IS '성별'
/

COMMENT ON COLUMN Member.email IS '이메일'
/

COMMENT ON COLUMN Member.phone IS '전화번호'
/

COMMENT ON COLUMN Member.address IS '주소'
/

COMMENT ON COLUMN Member.join_date IS '가입일'
/

COMMENT ON COLUMN Member.Withdrawal IS '탈퇴여부'
/

COMMENT ON COLUMN Member.black_code IS '구분'
/


-- Member Table Create SQL
CREATE TABLE product_ok
(
    product_ok_no    NUMBER          NOT NULL, 
    product_no       NUMBER          NOT NULL, 
    Approval         VARCHAR2(1)     DEFAULT 'Y' NOT NULL, 
    Approval_date    DATE            NOT NULL, 
    p_id             VARCHAR2(20)    NOT NULL, 
    CONSTRAINT PRODUCT_OK_PK PRIMARY KEY (product_ok_no)
)
/

CREATE SEQUENCE product_ok_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER product_ok_AI_TRG
BEFORE INSERT ON product_ok 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT product_ok_SEQ.NEXTVAL
    INTO: NEW.product_ok_no
    FROM DUAL;
END;
/

--DROP TRIGGER product_ok_AI_TRG;
/

--DROP SEQUENCE product_ok_SEQ;
/

COMMENT ON TABLE product_ok IS '상품 승인 리시트'
/

COMMENT ON COLUMN product_ok.product_ok_no IS '판매상품번호'
/

COMMENT ON COLUMN product_ok.product_no IS '판매대기번호'
/

COMMENT ON COLUMN product_ok.Approval IS '상품승인'
/

COMMENT ON COLUMN product_ok.Approval_date IS '승인날짜'
/

COMMENT ON COLUMN product_ok.p_id IS '판매자아이디'
/

ALTER TABLE product_ok
    ADD CONSTRAINT FK_product_ok_p_id_Member_user FOREIGN KEY (p_id)
        REFERENCES Member (user_id)
/


-- Member Table Create SQL
CREATE TABLE Category
(
    category_code    VARCHAR2(20)    NOT NULL, 
    category_name    VARCHAR2(20)    NOT NULL, 
    CONSTRAINT CATEGORY_PK PRIMARY KEY (category_code)
)
/

COMMENT ON TABLE Category IS '제품카테고리'
/

COMMENT ON COLUMN Category.category_code IS '카테고리코드'
/

COMMENT ON COLUMN Category.category_name IS '카테고리이름'
/


-- Member Table Create SQL
CREATE TABLE Black_list
(
    report_no          NUMBER           NOT NULL, 
    black_id           VARCHAR2(20)     NOT NULL, 
    reporter_id        VARCHAR2(20)     NOT NULL, 
    reporter_date      DATE             NOT NULL, 
    reporter_reason    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT BLACK_LIST_PK PRIMARY KEY (report_no)
)
/

CREATE SEQUENCE Black_list_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER Black_list_AI_TRG
BEFORE INSERT ON Black_list 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT Black_list_SEQ.NEXTVAL
    INTO: NEW.report_no
    FROM DUAL;
END;
/

--DROP TRIGGER Black_list_AI_TRG;
/

--DROP SEQUENCE Black_list_SEQ;
/

COMMENT ON TABLE Black_list IS '블랙리스트'
/

COMMENT ON COLUMN Black_list.report_no IS '신고번호'
/

COMMENT ON COLUMN Black_list.black_id IS '블랙자'
/

COMMENT ON COLUMN Black_list.reporter_id IS '신고자'
/

COMMENT ON COLUMN Black_list.reporter_date IS '신고일자'
/

COMMENT ON COLUMN Black_list.reporter_reason IS '신고사유'
/

ALTER TABLE Black_list
    ADD CONSTRAINT FK_Black_list_reporter_id_Memb FOREIGN KEY (reporter_id)
        REFERENCES Member (user_id)
/

ALTER TABLE Black_list
    ADD CONSTRAINT FK_Black_list_black_id_Member_ FOREIGN KEY (black_id)
        REFERENCES Member (user_id)
/


-- Member Table Create SQL
CREATE TABLE Product_Enrollment
(
    product_no          NUMBER            NOT NULL, 
    p_id                VARCHAR2(20)      NOT NULL, 
    price               NUMBER            NOT NULL, 
    category_code       VARCHAR2(20)      NOT NULL, 
    Approval            VARCHAR2(1)       DEFAULT 'N' NOT NULL, 
    product_title       VARCHAR2(1000)    NOT NULL, 
    product_img         VARCHAR2(1000)    NOT NULL, 
    product_Contents    VARCHAR2(1000)    NOT NULL, 
    product_file        VARCHAR2(1000)    NOT NULL, 
    reg_date            DATE              DEFAULT SYSDATE NOT NULL, 
    product_state       VARCHAR2(1)       DEFAULT 'N' NULL, 
    CONSTRAINT PRODUCT_ENROLLMENT_PK PRIMARY KEY (product_no)
)
/

CREATE SEQUENCE Product_Enrollment_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER Product_Enrollment_AI_TRG
BEFORE INSERT ON Product_Enrollment 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT Product_Enrollment_SEQ.NEXTVAL
    INTO: NEW.product_no
    FROM DUAL;
END;
/

--DROP TRIGGER Product_Enrollment_AI_TRG;
/

--DROP SEQUENCE Product_Enrollment_SEQ;
/

COMMENT ON TABLE Product_Enrollment IS '상품등록'
/

COMMENT ON COLUMN Product_Enrollment.product_no IS '판매대기번호'
/

COMMENT ON COLUMN Product_Enrollment.p_id IS '판매자아이디'
/

COMMENT ON COLUMN Product_Enrollment.price IS '판매가격'
/

COMMENT ON COLUMN Product_Enrollment.category_code IS '카테고리코드'
/

COMMENT ON COLUMN Product_Enrollment.Approval IS '상품승인'
/

COMMENT ON COLUMN Product_Enrollment.product_title IS '상품제목'
/

COMMENT ON COLUMN Product_Enrollment.product_img IS '상품사진'
/

COMMENT ON COLUMN Product_Enrollment.product_Contents IS '상품내용'
/

COMMENT ON COLUMN Product_Enrollment.product_file IS '승인파일'
/

COMMENT ON COLUMN Product_Enrollment.reg_date IS '등록 날짜'
/

COMMENT ON COLUMN Product_Enrollment.product_state IS '판매완료상태'
/

ALTER TABLE Product_Enrollment
    ADD CONSTRAINT FK_Product_Enrollment_p_id_Mem FOREIGN KEY (p_id)
        REFERENCES Member (user_id)
/

ALTER TABLE Product_Enrollment
    ADD CONSTRAINT FK_Product_Enrollment_category FOREIGN KEY (category_code)
        REFERENCES Category (category_code)
/


-- Member Table Create SQL
CREATE TABLE shopping_basket
(
    product_ok_no    NUMBER          NOT NULL, 
    b_id             VARCHAR2(20)    NOT NULL
)
/

COMMENT ON TABLE shopping_basket IS '장바구니리스트'
/

COMMENT ON COLUMN shopping_basket.product_ok_no IS '판매상품번호'
/

COMMENT ON COLUMN shopping_basket.b_id IS '접속자아이디'
/

ALTER TABLE shopping_basket
    ADD CONSTRAINT FK_shopping_basket_product_ok_ FOREIGN KEY (product_ok_no)
        REFERENCES product_ok (product_ok_no)
/

ALTER TABLE shopping_basket
    ADD CONSTRAINT FK_shopping_basket_b_id_Member FOREIGN KEY (b_id)
        REFERENCES Member (user_id)
/


-- Member Table Create SQL
CREATE TABLE Notice
(
    Notice_no           NUMBER          NOT NULL, 
    Notice_title        VARCHAR2(20)    NOT NULL, 
    Notice_content      VARCHAR2(20)    NOT NULL, 
    Notice_date         VARCHAR2(20)    DEFAULT 'SYSDATE' NOT NULL, 
    Notice_readcount    NUMBER          DEFAULT 0 NULL, 
    CONSTRAINT NOTICE_PK PRIMARY KEY (Notice_no)
)
/

CREATE SEQUENCE Notice_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER Notice_AI_TRG
BEFORE INSERT ON Notice 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT Notice_SEQ.NEXTVAL
    INTO: NEW.Notice_no
    FROM DUAL;
END;
/

--DROP TRIGGER Notice_AI_TRG;
/

--DROP SEQUENCE Notice_SEQ;
/

COMMENT ON TABLE Notice IS '공지사항'
/

COMMENT ON COLUMN Notice.Notice_no IS '공지사항글번호'
/

COMMENT ON COLUMN Notice.Notice_title IS '공지사항제목'
/

COMMENT ON COLUMN Notice.Notice_content IS '공지사항내용'
/

COMMENT ON COLUMN Notice.Notice_date IS '공지사항등록일'
/

COMMENT ON COLUMN Notice.Notice_readcount IS '공지사항조회수'
/


-- Member Table Create SQL
CREATE TABLE review
(
    review_no           NUMBER          NOT NULL, 
    review_title        VARCHAR2(20)    NOT NULL, 
    review_content      VARCHAR2(20)    NOT NULL, 
    review_date         VARCHAR2(20)    DEFAULT 'SYSDATE' NOT NULL, 
    review_readcount    NUMBER          DEFAULT 0 NULL, 
    user_id             VARCHAR2(20)    NOT NULL, 
    CONSTRAINT REVIEW_PK PRIMARY KEY (review_no)
)
/

CREATE SEQUENCE review_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER review_AI_TRG
BEFORE INSERT ON review 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT review_SEQ.NEXTVAL
    INTO: NEW.review_no
    FROM DUAL;
END;
/

--DROP TRIGGER review_AI_TRG;
/

--DROP SEQUENCE review_SEQ;
/

COMMENT ON TABLE review IS '리뷰'
/

COMMENT ON COLUMN review.review_no IS '리뷰글번호'
/

COMMENT ON COLUMN review.review_title IS '리뷰제목'
/

COMMENT ON COLUMN review.review_content IS '리뷰내용'
/

COMMENT ON COLUMN review.review_date IS '리뷰등록일'
/

COMMENT ON COLUMN review.review_readcount IS '리뷰조회수'
/

COMMENT ON COLUMN review.user_id IS '등록아이디'
/

ALTER TABLE review
    ADD CONSTRAINT FK_review_user_id_Member_user_ FOREIGN KEY (user_id)
        REFERENCES Member (user_id)
/


-- Member Table Create SQL
CREATE TABLE event
(
    event_no           NUMBER          NOT NULL, 
    event_title        VARCHAR2(20)    NOT NULL, 
    event_content      VARCHAR2(20)    NOT NULL, 
    event_date         VARCHAR2(20)    DEFAULT 'SYSDATE' NOT NULL, 
    event_readcount    NUMBER          DEFAULT 0 NULL, 
    CONSTRAINT EVENT_PK PRIMARY KEY (event_no)
)
/

CREATE SEQUENCE event_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER event_AI_TRG
BEFORE INSERT ON event 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT event_SEQ.NEXTVAL
    INTO: NEW.event_no
    FROM DUAL;
END;
/

--DROP TRIGGER event_AI_TRG;
/

--DROP SEQUENCE event_SEQ;
/

COMMENT ON TABLE event IS '이벤트'
/

COMMENT ON COLUMN event.event_no IS '이벤트글번호'
/

COMMENT ON COLUMN event.event_title IS '이벤트제목'
/

COMMENT ON COLUMN event.event_content IS '이벤트내용'
/

COMMENT ON COLUMN event.event_date IS '이벤트등록일'
/

COMMENT ON COLUMN event.event_readcount IS '이벤트조회수'
/


-- Member Table Create SQL
CREATE TABLE Payment
(
    Payment_no       NUMBER          NOT NULL, 
    b_id             VARCHAR2(20)    NOT NULL, 
    product_ok_no    NUMBER          NOT NULL, 
    price            NUMBER          NOT NULL, 
    product_state    VARCHAR2(1)     NOT NULL, 
    user_state       VARCHAR2(1)     NOT NULL, 
    CONSTRAINT PAYMENT_PK PRIMARY KEY (Payment_no)
)
/

CREATE SEQUENCE Payment_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER Payment_AI_TRG
BEFORE INSERT ON Payment 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT Payment_SEQ.NEXTVAL
    INTO: NEW.Payment_no
    FROM DUAL;
END;
/

--DROP TRIGGER Payment_AI_TRG;
/

--DROP SEQUENCE Payment_SEQ;
/

COMMENT ON TABLE Payment IS '결제리스트'
/

COMMENT ON COLUMN Payment.Payment_no IS '결제번호'
/

COMMENT ON COLUMN Payment.b_id IS '결제아이디'
/

COMMENT ON COLUMN Payment.product_ok_no IS '판매상품번호'
/

COMMENT ON COLUMN Payment.price IS '판매가격'
/

COMMENT ON COLUMN Payment.product_state IS '판매완료'
/

COMMENT ON COLUMN Payment.user_state IS '결제 상태'
/

ALTER TABLE Payment
    ADD CONSTRAINT FK_Payment_b_id_Member_user_id FOREIGN KEY (b_id)
        REFERENCES Member (user_id)
/

ALTER TABLE Payment
    ADD CONSTRAINT FK_Payment_product_ok_no_produ FOREIGN KEY (product_ok_no)
        REFERENCES product_ok (product_ok_no)
/


-- Member Table Create SQL
CREATE TABLE inquiry
(
    inquiry_no         NUMBER            NOT NULL, 
    inquiry_title      VARCHAR2(1000)    NOT NULL, 
    inquiry_content    VARCHAR2(1000)    NOT NULL, 
    inquiry_date       DATE              DEFAULT SYSDATE NOT NULL, 
    user_id            VARCHAR2(20)      NOT NULL, 
    inquiry_answer     VARCHAR2(1000)    NULL, 
    answer_date        DATE              NULL, 
    answer_state       VARCHAR2(1)       DEFAULT 'N' NOT NULL, 
    CONSTRAINT INQUIRY_PK PRIMARY KEY (inquiry_no)
)
/

CREATE SEQUENCE inquiry_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER inquiry_AI_TRG
BEFORE INSERT ON inquiry 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT inquiry_SEQ.NEXTVAL
    INTO: NEW.inquiry_no
    FROM DUAL;
END;
/

--DROP TRIGGER inquiry_AI_TRG;
/

--DROP SEQUENCE inquiry_SEQ;
/

COMMENT ON TABLE inquiry IS '문의'
/

COMMENT ON COLUMN inquiry.inquiry_no IS '문의번호'
/

COMMENT ON COLUMN inquiry.inquiry_title IS '문의제목'
/

COMMENT ON COLUMN inquiry.inquiry_content IS '문의내용'
/

COMMENT ON COLUMN inquiry.inquiry_date IS '문의 등록일'
/

COMMENT ON COLUMN inquiry.user_id IS '문의자아아디'
/

COMMENT ON COLUMN inquiry.inquiry_answer IS '문의답변'
/

COMMENT ON COLUMN inquiry.answer_date IS '답변일'
/

COMMENT ON COLUMN inquiry.answer_state IS '답변상태'
/

ALTER TABLE inquiry
    ADD CONSTRAINT FK_inquiry_user_id_Member_user FOREIGN KEY (user_id)
        REFERENCES Member (user_id)
/


